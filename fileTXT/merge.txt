void mergeSort(int left, int right) {
    if (left >= right) {
        return;
    }
    int middle = (right + left) / 2;
    mergeSort(left, middle);
    mergeSort(middle + 1, right);
    merge(left, middle, right);
}

void merge(int left, int middle, int right) {
    int n1 = middle - left + 1;
    int n2 = right - middle;

    int[] leftArr = new int[n1];
    for (int i = 0; i < n1; i++)
        leftArr[i] = array[left + i];

    int[] rightArr = new int[n2];
    for (int i = 0; i < n2; i++)
        rightArr[i] = array[middle + i + 1];

    int l = 0, r = 0, k = left; 

    while (l < n1 && r < n2) {
        int test = 0;
        if (leftArr[l] < rightArr[r]) {
            array[k] = leftArr[l];
            l++;
        } else {
            array[k] = rightArr[r];
            r++;
        }
        k++;
    }
    while (l < n1) {
        array[k] = leftArr[l];
        k++;
        l++;
    }
    while (r < n2) {
        array[k] = rightArr[r];
        k++;
        r++;
    }
}